name: 测试编译固件

on:
  workflow_dispatch:

#  watch:
#    types: started

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-18.06
  CONFIG_FILE: Configs/test.config
  DIY_SH: diy.sh
  FREE_UP_DISK: false
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: 检查
      uses: actions/checkout@master
      
    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    
    - name: 释放磁盘空间
      if: env.FREE_UP_DISK == 'true'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /usr/share/dotnet
        docker rmi `docker images -q`
        sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
    
    - name: 克隆源代码
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: 更新安装提要
      run: cd openwrt && ./scripts/feeds update -a && ./scripts/feeds install -a && ./scripts/feeds install -a

    - name: 加载自定义配置
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH

    - name: 下载dl文件包
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    
    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        [ $? == 0 ] && Compile_Result=true
        echo "Compile_Result=$Compile_Result" >> $GITHUB_ENV
    
    - name: 上传bin目录
      uses: actions/upload-artifact@master
      if: env.UPLOAD_BIN_DIR == 'true' && env.Compile_Result == 'true' && !cancelled()
      with:
        name: OpenWrt_bin
        path: openwrt/bin

    - name: 组织文件
      id: organize
      if: env.Compile_Result == 'true' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
   
    
    - name: 上传固件目录
      uses: actions/upload-artifact@master
      if: env.UPLOAD_COWTRANSFER == 'true' &&  env.Compile_Result == 'true' && !cancelled()
      with:
        name: OpenWrt固件
        path: openwrt/bin/Firmware

